name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run ESLint
      run: npm run lint
      
    - name: Check Prettier formatting
      run: npm run format:check
      
    - name: Run TypeScript type checking
      run: npm run type-check
      
    - name: Run Jest tests
      run: npm test
      
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          coverage/
          test-results.xml

  build:
    name: Build Project
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build Firebase Functions
      run: |
        cd functions
        npm ci
        npm run build
        
    - name: Build Expo project
      run: |
        npx expo export --platform all
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: |
          dist/
          functions/lib/

  deploy-firebase:
    name: Deploy Firebase Functions
    runs-on: ubuntu-latest
    needs: [test, build]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Setup Firebase CLI
      run: npm install -g firebase-tools
      
    - name: Deploy Firebase Functions
      run: |
        cd functions
        npm ci
        npm run build
        firebase deploy --only functions --token ${{ secrets.FIREBASE_TOKEN }}
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run npm audit
      run: npm audit --audit-level=moderate
      
    - name: Run CodeQL Analysis
      uses: github/codeql-action/init@v3
      with:
        languages: javascript,typescript
        
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

  notify:
    name: Notify Status
    runs-on: ubuntu-latest
    needs: [test, build, deploy-firebase, security-scan]
    if: always()
    
    steps:
    - name: Notify Success
      if: ${{ needs.test.result == 'success' && needs.build.result == 'success' }}
      run: echo "✅ All checks passed! Ready for deployment."
      
    - name: Notify Failure
      if: ${{ needs.test.result == 'failure' || needs.build.result == 'failure' }}
      run: echo "❌ Build failed. Check the logs for details."
