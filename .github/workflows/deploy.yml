name: Deploy Communexus

on:
  push:
    branches: [main, develop]
    tags: ['v*']
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '20'
  EXPO_PROJECT_ID: ${{ secrets.EXPO_PROJECT_ID }}
  FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}

jobs:
  # Test and Lint
  test:
    name: Test and Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          cd functions && npm ci && cd ..

      - name: Run TypeScript type check
        run: npx tsc --noEmit

      - name: Run ESLint
        run: npm run lint

      - name: Run Prettier check
        run: npx prettier --check .

      - name: Run tests
        run: npm test

      - name: Run integration tests
        run: npm run test:integration

  # Build and Deploy Firebase Functions
  deploy-firebase:
    name: Deploy Firebase Functions
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          cd functions && npm ci && cd ..

      - name: Setup Firebase CLI
        run: npm install -g firebase-tools

      - name: Authenticate to Firebase
        run: firebase login --token ${{ secrets.FIREBASE_TOKEN }}

      - name: Build Firebase Functions
        run: |
          cd functions
          npm run build

      - name: Deploy Firebase Functions
        run: firebase deploy --only functions --token ${{ secrets.FIREBASE_TOKEN }}

      - name: Deploy Firestore Rules
        run: firebase deploy --only firestore:rules --token ${{ secrets.FIREBASE_TOKEN }}

      - name: Deploy Storage Rules
        run: firebase deploy --only storage --token ${{ secrets.FIREBASE_TOKEN }}

  # Build Mobile Apps
  build-mobile:
    name: Build Mobile Apps
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
    strategy:
      matrix:
        platform: [ios, android]
        profile: [preview, production]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup EAS CLI
        run: npm install -g @expo/eas-cli

      - name: Authenticate to EAS
        run: eas login --token ${{ secrets.EXPO_TOKEN }}

      - name: Build app
        run: eas build --platform ${{ matrix.platform }} --profile ${{ matrix.profile }} --non-interactive

  # Submit to TestFlight (iOS)
  submit-testflight:
    name: Submit to TestFlight
    runs-on: ubuntu-latest
    needs: [deploy-firebase, build-mobile]
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup EAS CLI
        run: npm install -g @expo/eas-cli

      - name: Authenticate to EAS
        run: eas login --token ${{ secrets.EXPO_TOKEN }}

      - name: Submit to TestFlight
        run: eas submit --platform ios --profile testflight --non-interactive

  # Submit to Play Store (Android)
  submit-playstore:
    name: Submit to Play Store
    runs-on: ubuntu-latest
    needs: [deploy-firebase, build-mobile]
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup EAS CLI
        run: npm install -g @expo/eas-cli

      - name: Authenticate to EAS
        run: eas login --token ${{ secrets.EXPO_TOKEN }}

      - name: Submit to Play Store
        run: eas submit --platform android --profile production --non-interactive

  # Performance Testing
  performance-test:
    name: Performance Testing
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run performance tests
        run: npm run test:performance

      - name: Check bundle size
        run: |
          npx expo export --platform all
          du -sh dist/

  # Security Scan
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level moderate

      - name: Run CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          languages: javascript

  # Notify on Success/Failure
  notify:
    name: Notify Deployment Status
    runs-on: ubuntu-latest
    needs: [deploy-firebase, build-mobile, submit-testflight, submit-playstore]
    if: always()
    steps:
      - name: Notify Success
        if: ${{ needs.deploy-firebase.result == 'success' && needs.build-mobile.result == 'success' }}
        run: |
          echo "✅ Deployment successful!"
          echo "Firebase Functions: ${{ needs.deploy-firebase.result }}"
          echo "Mobile Builds: ${{ needs.build-mobile.result }}"
          echo "TestFlight: ${{ needs.submit-testflight.result }}"
          echo "Play Store: ${{ needs.submit-playstore.result }}"

      - name: Notify Failure
        if: ${{ needs.deploy-firebase.result == 'failure' || needs.build-mobile.result == 'failure' }}
        run: |
          echo "❌ Deployment failed!"
          echo "Firebase Functions: ${{ needs.deploy-firebase.result }}"
          echo "Mobile Builds: ${{ needs.build-mobile.result }}"
          echo "TestFlight: ${{ needs.submit-testflight.result }}"
          echo "Play Store: ${{ needs.submit-playstore.result }}"
          exit 1
